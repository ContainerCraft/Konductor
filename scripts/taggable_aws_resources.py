import json
import requests
import os

def get_schema(url):
    """Fetches and returns the JSON schema from a URL."""
    response = requests.get(url)
    response.raise_for_status()
    return response.json()

def extract_taggable_resources(schema):
    """Extracts and returns a list of taggable resources from the schema."""
    taggable_resources = []

    for type_name, type_info in schema['resources'].items():
        properties = type_info.get('inputProperties', {})
        if 'tags' in properties or 'Tags' in properties:
            taggable_resources.append(type_name)

    return taggable_resources

def write_taggable_py(taggable_resources, output_file):
    """Writes the taggable resources to a Python file as a constant list."""
    with open(output_file, 'w') as f:
        f.write("# This file is generated by scripts/taggable_aws_resources.py\n")
        f.write("# Do not edit manually.\n\n")
        f.write("TAGGABLE_RESOURCES = [\n")
        for resource in sorted(taggable_resources):
            f.write(f"    '{resource}',\n")
        f.write("]\n")

if __name__ == "__main__":
    SCHEMA_URL = 'https://raw.githubusercontent.com/pulumi/pulumi-aws/master/provider/cmd/pulumi-resource-aws/schema.json'
    schema = get_schema(SCHEMA_URL)
    taggable_resources = extract_taggable_resources(schema)

    # Ensure the output directory exists
    output_dir = 'pulumi/modules/aws'
    os.makedirs(output_dir, exist_ok=True)

    output_file = os.path.join(output_dir, 'taggable.py')
    write_taggable_py(taggable_resources, output_file)

    print(f"Taggable resources have been written to {output_file}")
